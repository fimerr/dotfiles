#!/usr/bin/env zsh
#
### update software
###    -b, --brew         brew
###        --brew-cask    brew cask
###    -p, --pip          python3 packages
###        --apt          apt packages
###    -z  --zsh          zsh
###    -a, --all          everything

info_begin() {
    printf "\r${CLEAR_SCRRN}..[ Begin ] upgrading ${UPURPLE}$1${COLOR_OFF} $2\n"
}
info_end() {
    printf "\r${CLEAR_SCRRN}..[ End ] upgrading ${UPURPLE}$1${COLOR_OFF} $2\n\n"
}
is_linux() {
    [[ "$OSTYPE" =~ "^linux" ]] && return true
    return false
}
is_macOS() {
    [[ "$OSTYPE" =~ "^Darwin" ]] && return true
    return false
}

update_brew_cask() {
    if is_macOS; then
        info_begin "BREW CASK" "packages"
        brew upgrade
        brew cask reinstall `brew cask outdated`
        info_end "BREW CASK" "packages"
    fi
}
update_brew() {
    if is_macOS; then
        info_begin "BREW" "packages"
        brew upgrade
        brew upgrade `brew outdated`
        info_end "BREW" "packages"
    fi
}
update_pip() {
    info_begin "PYTHON3" "packages"
    pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip3 install -U
    info_end "PYTHON3" "packages"
}
update_apt() {
    if is_linux; then
        info_begin "APT" "packages"
        sudo apt-get upgrade -y
        sudo apt-get upgrade -y
        sudo apt-get dist-upgrade
        info_end "APT" "packages"
    fi
}
update_zsh() {
    info_begin "zsh"
    local zsh_root=${ZSH:-$HOME/.oh-my-zsh}
    local zsh_custom_root=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}

    echo "⚙️  updating zsh theme <powerlevel10k>..."
    git -C ${zsh_custom_root}/themes/powerlevel10k pull
    local plugin_dirs=('zsh-autosuggestions' 'zsh-completions' 'zsh-syntax-highlighting')
    for plugin_dir in "${plugin_dirs[@]}"; do
        echo "⚙️  updating zsh plugin <${plugin_dir}>..."
        git -C ${zsh_custom_root}/plugins/${plugin_dir} pull
    done
    printf '⚙️  updating zsh by "omz update".\n'
    (source ${zsh_root}/lib/cli.zsh && omz update)

    info_end "zsh"
}

update_fzf() {
    info_begin "fzf"
    # update fzf
    is_linux && (cd ${HOME}/.fzf && git pull)
    # update fzf plugin
    fd . $HOME/.fzf.plugins --type=d --max-depth=1 | xargs -L1 -I{} bash -c "cd {}; git pull"
    info_end "fzf"
}

case "$1" in
    "-b" | "--brew" )
        update_brew
        ;;
    "--brew-cask" )
        update_brew_cask
        ;;
    "-p" | "--pip" )
        update_pip
        ;;
    "--apt" )
        update_apt
        ;;
    "-z" | "--zsh" )
        update_zsh
        update_fzf
        ;;
    "-a" | "--all" )
        update_brew
        update_pip
        update_apt
        update_zsh
        ;;
    * )
        _print_help "$(realpath $0)"
        ;;
esac
