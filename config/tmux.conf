# : << EOF
# Modified from https://github.com/gpakosz/.tmux

# -- general -------------------------------------------------------------------
unbind C-b
set-option -g prefix2 C-s                 # GNU-Screen compatible prefix
bind C-s send-prefix
set -s escape-time 10                      # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout

# color scheme
set -g default-terminal "screen-256color"

# list bound keys
bind ? new-window -n list-keys "tmux list-keys | less"
# edit configuration
bind e new-window -n tmux-config "vim ~/.tmux.conf"
# reload configuration
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# encoding
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

# support mouse opration --
set -g mouse on


# -- navigation ----------------------------------------------------------------
# pane navigation
bind -r C-h select-pane -L  # move left
bind -r C-j select-pane -D  # move down
bind -r C-k select-pane -U  # move up
bind -r C-l select-pane -R  # move right

# window navigation
bind -r C-p previous-window  # select previous window
bind -r C-n next-window      # select next window
bind C-s last-window         # move to last active window


# -- operations ----------------------------------------------------------------
# new pane in current path (split window)
bind | split-window -h -c "#{pane_current_path}"  # split horizontally
bind _ split-window -v -c "#{pane_current_path}"     # split vertically

# new windows in current path
bind c new-window -c "#{pane_current_path}"

# new session
bind C-c new-session

# resize pane
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# maximize current pane
bind z run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# kill pane without confirmation
bind x kill-pane

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows number at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off


# EOF
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# unset GREP_OPTIONS
# export LC_NUMERIC=C
#
# if ! printf '' | sed -E 's///' 2>/dev/null; then
#   if printf '' | sed -r 's///' 2>/dev/null; then
#     sed () {
#       n=$#; while [ "$n" -gt 0 ]; do arg=$1; shift; case $arg in -E*) arg=-r${arg#-E};; esac; set -- "$@" "$arg"; n=$(( n - 1 )); done
#       command sed "$@"
#     }
#   fi
# fi
#
# _uname_s=$(uname -s)
#
# _tmux_version=$(tmux -V | awk '{gsub(/[^0-9.]/, "", $2); print ($2+0) * 100}')
#
# _maximize_pane() {
#   current_session=${1:-$(tmux display -p '#{session_name}')}
#   current_pane=${2:-$(tmux display -p '#{pane_id}')}
#
#   dead_panes=$(tmux list-panes -s -t "$current_session" -F '#{pane_dead} #{pane_id} #{pane_start_command}' | grep -E -o '^1 %.+maximized.+$' || true)
#   restore=$(printf "%s" "$dead_panes" | sed -n -E -e "s/^1 $current_pane .+maximized.+'(%[0-9]+)'\"?$/tmux swap-pane -s \1 -t $current_pane \; kill-pane -t $current_pane/p"\
#                                            -e "s/^1 (%[0-9]+) .+maximized.+'$current_pane'\"?$/tmux swap-pane -s \1 -t $current_pane \; kill-pane -t \1/p")
#
#   if [ -z "$restore" ]; then
#     [ "$(tmux list-panes -t "$current_session:" | wc -l | sed 's/^ *//g')" -eq 1 ] && tmux display "Can't maximize with only one pane" && return
#     current_pane_height=$(tmux display -t "$current_pane" -p "#{pane_height}")
#     info=$(tmux new-window -t "$current_session:" -F "#{session_name}:#{window_index}.#{pane_id}" -P "maximized... 2>/dev/null & tmux setw -t \"$current_session:\" remain-on-exit on; printf \"\\033[\$(tput lines);0fPane has been maximized, press <prefix>+ to restore\n\" '$current_pane'")
#     session_window=${info%.*}
#     new_pane=${info#*.}
#
#     retry=1000
#     while [ x"$(tmux list-panes -t "$session_window" -F '#{session_name}:#{window_index}.#{pane_id} #{pane_dead}' 2>/dev/null)" != x"$info 1" ] && [ "$retry" -ne 0 ]; do
#       sleep 0.1
#       retry=$((retry - 1))
#     done
#     if [ "$retry" -eq 0 ]; then
#       tmux display 'Unable to maximize pane'
#     fi
#
#     tmux setw -t "$session_window" remain-on-exit off \; swap-pane -s "$current_pane" -t "$new_pane"
#   else
#     $restore || tmux kill-pane
#   fi
# }
#
# "$@"
